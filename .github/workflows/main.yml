name: Go CI/CD

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    container: tavoargento/quadev-go-service:0.0.1  # Specify the Docker image

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Rest of your steps can remain unchanged
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.4

      - name: Install Dependencies
        run: go mod download

      - name: Run Go Format Check
        run: gofmt -s -l . | tee /dev/stderr | (! read)

      - name: Run Go Import Check
        run: goimports -l . | tee /dev/stderr | (! read)

      - name: Run Go Lint
        run: golint ./...

      - name: Add proto files
        run: |
          git config --global --add safe.directory /__w/qd-authentication-api/qd-authentication-api
          git submodule update --init --recursive

      - name: Generate protobuf code
        run: |
          cd pb
          buf generate
          cd -

      - name: Add dertificates
        run: |
          current_path=$(pwd)
          echo "Current Path: $current_path"
          content=$(ls)
          echo "Content: $content"
          cd /certs
          echo "{{ secrets.$CA_PEM }}" | base64 -d /ca.pem
          echo "{{ secrets.$QD_AUTHENTICATION_API_CRT }}" | base64 -d > qd.authentication.api.crt
          echo "{{ secrets.$QD_AUTHENTICATION_API_KEY }}" | base64 -d > qd.authentication.api.key
          echo "{{ secrets.$QD_EMAIL_API_CRT }}" | base64 -d > qd.email.api.crt
          echo "{{ secrets.$QD_EMAIL_API_KEY }}" | base64 -d > qd.email.api.key
          cd -

      - name: Run Unit Tests
        run: go test -v ./...

      - name: Build
        run: go build -o myservice
