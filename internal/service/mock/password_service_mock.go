// Code generated by MockGen. DO NOT EDIT.
// Source: password_service.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPasswordServicer is a mock of PasswordServicer interface.
type MockPasswordServicer struct {
	ctrl     *gomock.Controller
	recorder *MockPasswordServicerMockRecorder
}

// MockPasswordServicerMockRecorder is the mock recorder for MockPasswordServicer.
type MockPasswordServicerMockRecorder struct {
	mock *MockPasswordServicer
}

// NewMockPasswordServicer creates a new mock instance.
func NewMockPasswordServicer(ctrl *gomock.Controller) *MockPasswordServicer {
	mock := &MockPasswordServicer{ctrl: ctrl}
	mock.recorder = &MockPasswordServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPasswordServicer) EXPECT() *MockPasswordServicerMockRecorder {
	return m.recorder
}

// ForgotPassword mocks base method.
func (m *MockPasswordServicer) ForgotPassword(ctx context.Context, email string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ForgotPassword", ctx, email)
	ret0, _ := ret[0].(error)
	return ret0
}

// ForgotPassword indicates an expected call of ForgotPassword.
func (mr *MockPasswordServicerMockRecorder) ForgotPassword(ctx, email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ForgotPassword", reflect.TypeOf((*MockPasswordServicer)(nil).ForgotPassword), ctx, email)
}

// ResetPassword mocks base method.
func (m *MockPasswordServicer) ResetPassword(ctx context.Context, token, password string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResetPassword", ctx, token, password)
	ret0, _ := ret[0].(error)
	return ret0
}

// ResetPassword indicates an expected call of ResetPassword.
func (mr *MockPasswordServicerMockRecorder) ResetPassword(ctx, token, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResetPassword", reflect.TypeOf((*MockPasswordServicer)(nil).ResetPassword), ctx, token, password)
}
